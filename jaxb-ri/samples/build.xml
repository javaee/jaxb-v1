<?xml version="1.0"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://glassfish.dev.java.net/public/CDDL+GPL_1_1.html
    or packager/legal/LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at packager/legal/LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<project name="samples" basedir=".." default="compile">

    <description>
        Sample Apps Sub-Project
        =======================
        
        Automated sample app generation.  Meta files that describe each
        sample app are used to generate Ant build.xml files, test, etc.
    </description>
    
    <!-- import build properties -->
    <property file="${basedir}/build.properties" />
    
    <!-- this property controls how the stylesheet generates classpath
         information in the sample build.xml files.  Legal values are: 
         
             'workspace' - samples can be run from samples/samples-src/...
             'RI' - samples can be run from dist/samples/...
             'JWSDP' - sample can be run from $JWSDP_HOME/jaxb/samples/...
             
         during regular workspace builds, this property will default to
         'workspace' so the sample can be run in place.
    -->
    <property name="samples.target" value="workspace"/>
    <property environment="env"/>

    <!-- setup classpath -->
    <path id="classpath">
        <pathelement path="." />
        <pathelement path="${samples.classes}" />
        <fileset dir="${jaxb.libs}" includes="**/*.jar"/>
        <pathelement path="${test.classes}" />
        <pathelement location="${env.JAVA_HOME}/lib/tools.jar"/>
    </path>

    <!-- compile Java source files -->
    <target name="compile" description="compile sample app processor code">
        <mkdir dir="${samples.classes}" />
        <javac srcdir="${samples.src}" destdir="${samples.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}"
            deprecation="${compile.deprecation}" >
            <classpath refid="classpath"/>
        </javac>
        <!-- copy other resources into build dir -->
        <copy toDir="${samples.classes}">
            <fileset dir="${samples.src}" includes="**/*.xsl" />
            <fileset dir="${samples.src}" includes="**/*.rnc" />
        </copy>
    </target>

    <dirset dir="${samples.samples-src}">
        <exclude name="**/CVS"/>
    </dirset>
    
    <!-- run the sample app processors -->
    <target name="process-samples" depends="compile"
            description="generate build.xml into the samples-src directory.">
        <java classname="processor.SampleProcessorDriver" fork="true">
            <classpath refid="classpath" />
            <arg line="-dir ${samples.samples-src}" />
            <arg value="-validating" />
            <arg line="-ant ${samples.target}" />
        </java>
    </target>

    <!-- launch the processor in debug mode -->
    <target name="debug-process-samples" depends="compile">
        <java classname="processor.SampleProcessorDriver" fork="true">
            <classpath refid="classpath" />
            <arg line="-dir ${samples.samples-src}" />
            <arg value="-validating" />
            <jvmarg value="-Xdebug" />
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8000" />
        </java>
    </target>

    <!-- run each of the sample apps and compare the output to the expected results -->
    <target name="test-samples" depends="clean, compile"
            description="run each of the samples and report pass/fail results">
        <property name="samples.test.work" value="${samples.root}/work" />
        <mkdir dir="${samples.test.work}" />
        <copy todir="${samples.test.work}">
            <fileset dir="${samples.samples-src}"/>
        </copy>
                
        <java classname="processor.SampleProcessorDriver" fork="true">
            <classpath refid="classpath" />
            <jvmarg line="-Xmx512m" />
            <arg line="-dir ${samples.test.work}" />
            <arg value="-validating" />
            <arg value="-execute" />
            <arg value="-verbose" />
            <arg line="-ant ${samples.target}" />
        </java>
    </target>
    
    <!-- remove all intermediate files -->
    <target name="clean" depends="clean-samples" description="clean generated artifacts"/>
    <target name="clean-samples">
        <delete dir="${samples.build}" />
        <!-- clean generated artifacts under samples-src/* ??? -->
        <delete>
            <fileset dir="${samples.samples-src}" includes="**/build.xml"/>
        </delete>
        <delete dir="${samples.root}/work"/>
    </target>


</project>
