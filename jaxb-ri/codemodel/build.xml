<?xml version="1.0"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the "License").  You may not use this file except
 in compliance with the License.
 
 You can obtain a copy of the license at
 https://jwsdp.dev.java.net/CDDLv1.0.html
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 HEADER in each file and include the License file at
 https://jwsdp.dev.java.net/CDDLv1.0.html  If applicable,
 add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your
 own identifying information: Portions Copyright [yyyy]
 [name of copyright owner]
-->

<project name="codemodel" basedir=".." default="deploy">

	<description>
		Codemodel Sub-Project
		=====================
		
		The codemodel project is a framework for representing java source
		code in an object model.  The back-end of the xjc compiler builds
		all of the generated java source code in memory and then writes the
		files to dist at the end.
	</description>
	
    <!-- import build properties -->
    <property file="${basedir}/build.properties" />

    <!-- convenience targets when building alone -->
    <target name="compile" 
            depends="compile-codemodel" 
            description="compile all codemodel src into jaxb-ri/codemodel/build/classes"/>
    <target name="clean"   
            depends="clean-codemodel"
            description="clean jaxb-ri/codemodel/build"/>
    <target name="deploy"  
            depends="deploy-codemodel"
            description="copy all codemodel classes up to jaxb-ri/build/classes"/>
    <target name="javadoc" 
            depends="javadoc-codemodel" 
            description="generate javadoc into jaxb-ri/codemodel/docs"/>

    <!-- compile Java source files -->
    <target name="compile-codemodel">
        <mkdir dir="${codemodel.classes}" />
        <javac srcdir="${codemodel.src}" destdir="${codemodel.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}"
            deprecation="${compile.deprecation}" >
        </javac>
        <!-- copy i18n props into build dir -->
        <copy toDir="${codemodel.classes}">
            <fileset dir="${codemodel.src}" includes="**/*.properties" />
        </copy>
    </target>

    <!-- deploy static files back up into the main project -->
    <target name="deploy-static-codemodel" 
            depends="compile-codemodel">
        <copy toDir="${jaxb.classes}">
            <fileset dir="${codemodel.classes}" includes="**/*.properties" />
        </copy>
    </target>

    <!-- deploy the classes back up into the main project -->
    <target name="deploy-codemodel" 
            depends="deploy-static-codemodel">
        <copy toDir="${jaxb.classes}">
            <fileset dir="${codemodel.classes}" includes="**/*.class" />
        </copy>
    </target>

    <!-- build dist -->
    <!-- not sure we need this anymore....
    <target name="dist" depends="compile">
        <mkdir dir="${work.dir}/dist/lib" />
        <jar jarfile="${work.dir}/dist/lib/codemodel.jar"
            basedir="${work.dir}/build/classes">
            <include name="com/sun/codemodel/**" />
        </jar>
    </target>
    -->

    <!-- generate javadoc -->
    <!-- this javadoc if for development only - it should not be included with the dist -->
    <target name="javadoc-codemodel" 
            depends="compile-codemodel">
        <mkdir dir="${codemodel.docs}/api" />
        <javadoc packagenames="com.sun.codemodel" 
            sourcepath="${codemodel.src}"
            classpath="${codemodel.classes}"
            destdir="${codemodel.docs}/api"
            use="true"
            author="false"
            version="false"
            windowtitle="Code Model API"
            doctitle="Code Model API" />
    </target>

    <!-- remove all intermediate files -->
    <target name="clean-codemodel">
        <delete dir="${codemodel.root}/build" />
        <delete dir="${codemodel.root}/docs" />
    </target>

</project>
