<?xml version="1.0"?>

<!--
 The contents of this file are subject to the terms
 of the Common Development and Distribution License
 (the "License").  You may not use this file except
 in compliance with the License.
 
 You can obtain a copy of the license at
 https://jwsdp.dev.java.net/CDDLv1.0.html
 See the License for the specific language governing
 permissions and limitations under the License.
 
 When distributing Covered Code, include this CDDL
 HEADER in each file and include the License file at
 https://jwsdp.dev.java.net/CDDLv1.0.html  If applicable,
 add the following below this CDDL HEADER, with the
 fields enclosed by brackets "[]" replaced with your
 own identifying information: Portions Copyright [yyyy]
 [name of copyright owner]
-->

<project name="runtime-deprecated" basedir=".." default="deploy">

	<description>
		Runtime-deprecated Sub-Project
		==============================
		
		This project contains all of the runtime classes necessary to
		support binary compatibility (running 1.0 generated code in a
		1.0.1 or 1.1 runtime.
	</description>
	
    <!-- import build properties -->
    <property file="${basedir}/build.properties" />

    <!-- convenience targets when building alone -->
    <target name="compile" 
            depends="compile-runtime-deprecated"
            description="compile all deprecated runtime src into jaxb-ri/runtime-deprecated/build/classes"/>
    <target name="clean"   
            depends="clean-runtime-deprecated"
            description="clean jaxb-ri/runtime-deprecated/build"/>
    <target name="deploy"  
            depends="deploy-runtime-deprecated"
            description="copy all deprecated runtime classes up to jaxb-ri/build/classes"/>

   <!-- classpath -->
   <path id="javac.classpath">
        <pathelement path="${jaxb.classes}" />
        <fileset dir="${jaxb.libs.redist}" includes="*.jar"/>
        <fileset dir="${jaxb.libs.rebundle}" includes="*.jar"/>
        <!-- include current runtime classes on the classpath -->
        <pathelement path="${runtime.classes}" />
   </path>

   <!-- compile Java source files -->
    <target name="compile-runtime-deprecated">
        <mkdir dir="${runtime-deprecated.classes}" />

        <!-- always delete this prop file so that the latest build id can be set>
        <delete file="${runtime-deprecated.classes}/com/sun/xml/bind/Messages.properties"/ -->

        <javac srcdir="${runtime-deprecated.src}" destdir="${runtime-deprecated.classes}"
            debug="${compile.debug}" optimize="${compile.optimize}"
            deprecation="${compile.deprecation}" >
            <classpath refid="javac.classpath" />
        </javac>
        
        <!-- copy i18n props into build dir -->
        <copy toDir="${runtime-deprecated.classes}">
            <fileset dir="${runtime-deprecated.src}" includes="**/*.properties" />
        </copy>
        
        <!-- expose the build version to the DefaultJAXBContextImpl class so
             that it is available to the generated ObjectFactory classes>
        <replace fir="${runtime-deprecated.classes}/com/sun/xml/bind" includes="Messages*.properties">
            <replacefilter token="@@BUILD_VERSION@@" value="${build.version}"/>
        </replace -->
    </target>

    <!-- deploy static files back up into the main project -->
    <target name="deploy-static-runtime-deprecated" 
            depends="compile-runtime-deprecated">         
        <copy toDir="${jaxb.classes}">
            <fileset dir="${runtime-deprecated.classes}" includes="**/*.properties" />
        </copy>
    </target>

    <!-- deploy the classes back up into the main project -->
    <target name="deploy-runtime-deprecated" 
            depends="deploy-static-runtime-deprecated">
        <copy toDir="${jaxb.classes}">
            <fileset dir="${runtime-deprecated.classes}" includes="**/*.class" />
        </copy>
    </target>

    <!-- remove all intermediate files -->
    <target name="clean-runtime-deprecated">
        <delete dir="${runtime-deprecated.root}/build" />
    </target>
</project>
